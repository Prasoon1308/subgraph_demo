// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class value extends ethereum.Event {
  get params(): value__Params {
    return new value__Params(this);
  }
}

export class value__Params {
  _event: value;

  constructor(event: value) {
    this._event = event;
  }

  get one(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class valuetwo extends ethereum.Event {
  get params(): valuetwo__Params {
    return new valuetwo__Params(this);
  }
}

export class valuetwo__Params {
  _event: valuetwo;

  constructor(event: valuetwo) {
    this._event = event;
  }

  get two(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class demo extends ethereum.SmartContract {
  static bind(address: Address): demo {
    return new demo("demo", address);
  }

  getA(): BigInt {
    let result = super.call("getA", "getA():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getA(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getA", "getA():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class DemoFuncCall extends ethereum.Call {
  get inputs(): DemoFuncCall__Inputs {
    return new DemoFuncCall__Inputs(this);
  }

  get outputs(): DemoFuncCall__Outputs {
    return new DemoFuncCall__Outputs(this);
  }
}

export class DemoFuncCall__Inputs {
  _call: DemoFuncCall;

  constructor(call: DemoFuncCall) {
    this._call = call;
  }

  get _a(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DemoFuncCall__Outputs {
  _call: DemoFuncCall;

  constructor(call: DemoFuncCall) {
    this._call = call;
  }
}

export class DemoFunctwoCall extends ethereum.Call {
  get inputs(): DemoFunctwoCall__Inputs {
    return new DemoFunctwoCall__Inputs(this);
  }

  get outputs(): DemoFunctwoCall__Outputs {
    return new DemoFunctwoCall__Outputs(this);
  }
}

export class DemoFunctwoCall__Inputs {
  _call: DemoFunctwoCall;

  constructor(call: DemoFunctwoCall) {
    this._call = call;
  }

  get _b(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DemoFunctwoCall__Outputs {
  _call: DemoFunctwoCall;

  constructor(call: DemoFunctwoCall) {
    this._call = call;
  }
}
